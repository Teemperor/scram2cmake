
module libc {
    module stdio { header "stdio.h" export * }
    module stdlib { header "stdlib.h" export * }
    module string { header "string.h" export * }
    module stdint { header "stdint.h" export * }
    module errno { header "errno.h" export * }
    module alloca { header "alloca.h" export * }
    module malloc { header "malloc.h" export * }
    module xlocale { header "xlocale.h" export * }
    module signal { header "signal.h" export * }
    module unistd { header "unistd.h" export * }
    module dlfcn { header "dlfcn.h" export * }
    module math { header "math.h" export * }
    module libio { header "libio.h" export * }
    module wchar { header "wchar.h" export * }
    module pthread { header "pthread.h" export * }
    module endian { header "endian.h" export * }
    module sched { header "sched.h" export * }
    module time { header "time.h" export * }
    module netdb { header "netdb.h" export * }
    module features { header "features.h" export * }
    module bits {
        module types { header "bits/types.h" export * }
        module wchar { header "bits/wchar.h" export * }
    }
    module sys {
        module select { header "sys/select.h" export * }
        module types { header "sys/types.h" export * }
        module wait { header "sys/wait.h" export * }
        module time { header "sys/time.h" export * }
        module ipc { header "sys/ipc.h" export * }
        module msg { header "sys/msg.h" export * }
        module signal { header "sys/signal.h" export * }
        module socket { header "sys/socket.h" export * }
        module stat { header "sys/stat.h" export * }
        module fcntl { header "sys/fcntl.h" export * }
        module resource { header "sys/resource.h" export * }
    }
    export *
}

module HepMC {
    module "PythiaWrapper6_4" { header "HepMC/PythiaWrapper6_4.h" export *}
    export *
}

module tbb {
    module task { header "tbb/task.h" export * }
    module concurrent_queue { header "tbb/concurrent_queue.h" export * }
    module concurrent_vector { header "tbb/concurrent_vector.h" export * }
    module concurrent_unordered_map { header "tbb/concurrent_unordered_map.h" export * }
    module parallel_for { header "tbb/parallel_for.h" export * }
    export *
}

module Pythia8 {
    module "Analysis.h" { header "Pythia8/Analysis.h" export * }
    module "Basics.h" { header "Pythia8/Basics.h" export * }
    module "BeamParticle.h" { header "Pythia8/BeamParticle.h" export * }
    module "BeamRemnants.h" { header "Pythia8/BeamRemnants.h" export * }
    module "BeamShape.h" { header "Pythia8/BeamShape.h" export * }
    module "BoseEinstein.h" { header "Pythia8/BoseEinstein.h" export * }
    module "ColourReconnection.h" { header "Pythia8/ColourReconnection.h" export * }
    module "ColourTracing.h" { header "Pythia8/ColourTracing.h" export * }
    module "Event.h" { header "Pythia8/Event.h" export * }
    module "FJcore.h" { header "Pythia8/FJcore.h" export * }
    module "FragmentationFlavZpT.h" { header "Pythia8/FragmentationFlavZpT.h" export * }
    module "FragmentationSystems.h" { header "Pythia8/FragmentationSystems.h" export * }
    module "GammaKinematics.h" { header "Pythia8/GammaKinematics.h" export * }
    module "HadronLevel.h" { header "Pythia8/HadronLevel.h" export * }
    module "HadronScatter.h" { header "Pythia8/HadronScatter.h" export * }
    module "HardDiffraction.h" { header "Pythia8/HardDiffraction.h" export * }
    module "HelicityBasics.h" { header "Pythia8/HelicityBasics.h" export * }
    module "HelicityMatrixElements.h" { header "Pythia8/HelicityMatrixElements.h" export * }
    module "HiddenValleyFragmentation.h" { header "Pythia8/HiddenValleyFragmentation.h" export * }
    module "History.h" { header "Pythia8/History.h" export * }
    module "Info.h" { header "Pythia8/Info.h" export * }
    module "JunctionSplitting.h" { header "Pythia8/JunctionSplitting.h" export * }
    module "LesHouches.h" { header "Pythia8/LesHouches.h" export * }
    module "LHEF3.h" { header "Pythia8/LHEF3.h" export * }
    module "Merging.h" { header "Pythia8/Merging.h" export * }
    module "MergingHooks.h" { header "Pythia8/MergingHooks.h" export * }
    module "MiniStringFragmentation.h" { header "Pythia8/MiniStringFragmentation.h" export * }
    module "MultipartonInteractions.h" { header "Pythia8/MultipartonInteractions.h" export * }
    module "ParticleData.h" { header "Pythia8/ParticleData.h" export * }
    module "ParticleDecays.h" { header "Pythia8/ParticleDecays.h" export * }
    module "PartonDistributions.h" { header "Pythia8/PartonDistributions.h" export * }
    module "PartonLevel.h" { header "Pythia8/PartonLevel.h" export * }
    module "PartonSystems.h" { header "Pythia8/PartonSystems.h" export * }
    module "PhaseSpace.h" { header "Pythia8/PhaseSpace.h" export * }
    module "ProcessContainer.h" { header "Pythia8/ProcessContainer.h" export * }
    module "ProcessLevel.h" { header "Pythia8/ProcessLevel.h" export * }
    module "PythiaComplex.h" { header "Pythia8/PythiaComplex.h" export * }
    module "Pythia.h" { header "Pythia8/Pythia.h" export * }
    module "PythiaStdlib.h" { header "Pythia8/PythiaStdlib.h" export * }
    module "ResonanceDecays.h" { header "Pythia8/ResonanceDecays.h" export * }
    module "ResonanceWidthsDM.h" { header "Pythia8/ResonanceWidthsDM.h" export * }
    module "ResonanceWidths.h" { header "Pythia8/ResonanceWidths.h" export * }
    module "RHadrons.h" { header "Pythia8/RHadrons.h" export * }
    module "Settings.h" { header "Pythia8/Settings.h" export * }
    module "SigmaCompositeness.h" { header "Pythia8/SigmaCompositeness.h" export * }
    module "SigmaDM.h" { header "Pythia8/SigmaDM.h" export * }
    module "SigmaEW.h" { header "Pythia8/SigmaEW.h" export * }
    module "SigmaExtraDim.h" { header "Pythia8/SigmaExtraDim.h" export * }
    module "SigmaGeneric.h" { header "Pythia8/SigmaGeneric.h" export * }
    module "SigmaHiggs.h" { header "Pythia8/SigmaHiggs.h" export * }
    module "SigmaLeftRightSym.h" { header "Pythia8/SigmaLeftRightSym.h" export * }
    module "SigmaLeptoquark.h" { header "Pythia8/SigmaLeptoquark.h" export * }
    module "SigmaNewGaugeBosons.h" { header "Pythia8/SigmaNewGaugeBosons.h" export * }
    module "SigmaOnia.h" { header "Pythia8/SigmaOnia.h" export * }
    module "SigmaProcess.h" { header "Pythia8/SigmaProcess.h" export * }
    module "SigmaQCD.h" { header "Pythia8/SigmaQCD.h" export * }
    module "SigmaSUSY.h" { header "Pythia8/SigmaSUSY.h" export * }
    module "SigmaTotal.h" { header "Pythia8/SigmaTotal.h" export * }
    module "SLHAinterface.h" { header "Pythia8/SLHAinterface.h" export * }
    module "SpaceShower.h" { header "Pythia8/SpaceShower.h" export * }
    module "StandardModel.h" { header "Pythia8/StandardModel.h" export * }
    module "Streams.h" { header "Pythia8/Streams.h" export * }
    module "StringFragmentation.h" { header "Pythia8/StringFragmentation.h" export * }
    module "StringLength.h" { header "Pythia8/StringLength.h" export * }
    module "SusyCouplings.h" { header "Pythia8/SusyCouplings.h" export * }
    module "SusyLesHouches.h" { header "Pythia8/SusyLesHouches.h" export * }
    module "SusyResonanceWidths.h" { header "Pythia8/SusyResonanceWidths.h" export * }
    module "SusyWidthFunctions.h" { header "Pythia8/SusyWidthFunctions.h" export * }
    module "TauDecays.h" { header "Pythia8/TauDecays.h" export * }
    module "TimeShower.h" { header "Pythia8/TimeShower.h" export * }
    module "UserHooks.h" { header "Pythia8/UserHooks.h" export * }
    module "WeakShowerMEs.h" { header "Pythia8/WeakShowerMEs.h" export * }
}

module Geant4 {
    module CLHEP {
        module Units_SystemOfUnits { header "Geant4/CLHEP/Units/SystemOfUnits.h" export * }
        export *
    }
    export *
}

// The system CLHEP installation that is also needed...
module CLHEPSys {
    module Matrix { header "CLHEP/Matrix/Matrix.h" export * }
    module Vector { header "CLHEP/Matrix/Vector.h" export * }
    module SymMatrix { header "CLHEP/Matrix/SymMatrix.h" export * }
    module Units_SystemOfUnits { header "CLHEP/Units/SystemOfUnits.h" export * }
}

module xercesc {
    module DOMParser { header "xercesc/parsers/XercesDOMParser.hpp" export * }
    module PlatformUtils { header "xercesc/util/PlatformUtils.hpp" export * }
    module DOM { header "xercesc/dom/DOM.hpp" export * }
    export *
}

module cppunit {
    module helper_macros { header "cppunit/extensions/HelperMacros.h" export * }
}

module linux {
    module uuid { header "uuid/uuid.h" export * }
    export *

}

module zlib { header "zlib.h" export * }

module tiny_xml {
    header "tinyxml.h"
    export *
}

module boost {
  module version { header "boost/version.hpp" export * }
  module config { header "boost/config.hpp" export * }
  module filesystem {
    header "boost/filesystem.hpp"

    export *
  }
  module bind { header "boost/bind.hpp" export * }
  module fs_convenience { header "boost/filesystem/convenience.hpp" export * }
  module fs_operations { header "boost/filesystem/operations.hpp" export * }
  module fs_path { header "boost/filesystem/path.hpp" export * }


  module "boost/any.hpp" { header "boost/any.hpp" export * }
  module "boost/assign/std/vector.hpp" { header "boost/assign/std/vector.hpp" export * }
  module "boost/call_traits.hpp" { header "boost/call_traits.hpp" export * }
  module "boost/concept_check.hpp" { header "boost/concept_check.hpp" export * }
  module "boost/cstdint.hpp" { header "boost/cstdint.hpp" export * }
  module "boost/functional.hpp" { header "boost/functional.hpp" export * }
  module "boost/iterator/counting_iterator.hpp" { header "boost/iterator/counting_iterator.hpp" export * }
  module "boost/iterator/indirect_iterator.hpp" { header "boost/iterator/indirect_iterator.hpp" export * }
  module "boost/iterator/iterator_facade.hpp" { header "boost/iterator/iterator_facade.hpp" export * }
  module "boost/iterator/permutation_iterator.hpp" { header "boost/iterator/permutation_iterator.hpp" export * }
  module "boost/iterator/transform_iterator.hpp" { header "boost/iterator/transform_iterator.hpp" export * }
  module "boost/lambda/bind.hpp" { header "boost/lambda/bind.hpp" export * }
  module "boost/lambda/lambda.hpp" { header "boost/lambda/lambda.hpp" export * }
  module "boost/mpl/assert.hpp" { header "boost/mpl/assert.hpp" export * }
  module "boost/mpl/has_xxx.hpp" { header "boost/mpl/has_xxx.hpp" export * }
  module "boost/mpl/if.hpp" { header "boost/mpl/if.hpp" export * }
  module "boost/range.hpp" { header "boost/range.hpp" export * }
  module "boost/range/iterator_range.hpp" { header "boost/range/iterator_range.hpp" export * }
  module "boost/type_traits.hpp" { header "boost/type_traits.hpp" export * }
  module "boost/utility/enable_if.hpp" { header "boost/utility/enable_if.hpp" export * }
  module "boost/utility.hpp" { header "boost/utility.hpp" export * }

  module spirit_classic { header "boost/spirit/include/classic.hpp" export * }
  module spirit_classic_chset { header "boost/spirit/include/classic_chset.hpp" export * }
  module spirit_classic_grammar_def { header "boost/spirit/include/classic_grammar_def.hpp" export * }
  module "boost/spirit/home/classic/utility/grammar_def.hpp" { header "boost/spirit/home/classic/utility/grammar_def.hpp" export * }
  module spirit_tuple { header "boost/spirit/home/classic/phoenix/tuples.hpp" export * }

  //module system_errorcode { header "boost/system/error_code.hpp" export * }

  module thread {
    header "boost/thread/thread.hpp"
    header "boost/thread/tss.hpp"
    export *
  }
  module algorithm_string { header "boost/algorithm/string.hpp" export * }
  // doesn't work yet: 
  module lexical_cast { header "boost/lexical_cast.hpp" export * }
  module static_assert { header "boost/static_assert.hpp" export * }
  
  module regex { header "boost/regex.hpp" export * }
  module tokenizer { header "boost/tokenizer.hpp" export * }

  module python { header "boost/python.hpp" export * }
  module def_helper { header "boost/python/detail/def_helper.hpp" export * }
  module python_class { header "boost/python/class.hpp" export * }  
  
  module string_replace { header "boost/algorithm/string/replace.hpp" export * }

  module hash_fwd { header "boost/functional/hash_fwd.hpp" export * }

  module mpl_vector { header "boost/mpl/vector.hpp" export * }
  module array { header "boost/array.hpp" export * }
  module adjacency_list {
    header "boost/graph/adjacency_list.hpp"
    export *
  }

  module lambda { header "boost/lambda/lambda.hpp" export * }
  module graph_traits { header "boost/graph/graph_traits.hpp" export * }
  module graph_depth_first_search { header "boost/graph/depth_first_search.hpp" export * }
  module range_adaptor_reversed { header "boost/range/adaptor/reversed.hpp" export * }

  /*
  module mpl_identity { header "boost/mpl/identity.hpp" export * }
  module move_detail_meta_utils_core { header "boost/move/detail/meta_utils_core.hpp" export * }
  module swap { header "boost/core/swap.hpp" export * }  
  module named_graph { header "boost/graph/named_graph.hpp" export * }
  module set_fwd { header "boost/unordered/unordered_set_fwd.hpp" export * }
  module unordered_detail_set { textual header "boost/unordered/detail/set.hpp" export * }
  module shared_ptr { header "boost/smart_ptr/shared_ptr.hpp" export * }
  module move { header "boost/move/move.hpp" export * }
  module program_option { header "boost/program_options.hpp" export * }
 */
  
  module hash { header "boost/functional/hash.hpp" export * }

  module exception { header "boost/exception/exception.hpp" export * }
  
  module throw_exception { header "boost/throw_exception.hpp" export * }
  
  module tuple { header "boost/tuple/tuple.hpp" export * }
  
  module addressof { header "boost/utility/addressof.hpp" export * }
  
  module ref { header "boost/core/ref.hpp" export * }
  
  module unordered_set { header "boost/unordered_set.hpp" export * }

  module mpl_eval_if { header "boost/mpl/eval_if.hpp" export * }
  
  module mpl_placeholders { header "boost/mpl/placeholders.hpp" export * }
  
  module "add_const.hpp" { header "boost/type_traits/add_const.hpp" export * }
  module "add_cv.hpp" { header "boost/type_traits/add_cv.hpp" export * }
  module "add_lvalue_reference.hpp" { header "boost/type_traits/add_lvalue_reference.hpp" export * }
  module "add_pointer.hpp" { header "boost/type_traits/add_pointer.hpp" export * }
  module "add_reference.hpp" { header "boost/type_traits/add_reference.hpp" export * }
  module "add_rvalue_reference.hpp" { header "boost/type_traits/add_rvalue_reference.hpp" export * }
  module "add_volatile.hpp" { header "boost/type_traits/add_volatile.hpp" export * }
  module "aligned_storage.hpp" { header "boost/type_traits/aligned_storage.hpp" export * }
  module "alignment_of.hpp" { header "boost/type_traits/alignment_of.hpp" export * }
  module "alignment_traits.hpp" { header "boost/type_traits/alignment_traits.hpp" export * }
  module "arithmetic_traits.hpp" { header "boost/type_traits/arithmetic_traits.hpp" export * }
  module "array_traits.hpp" { header "boost/type_traits/array_traits.hpp" export * }
  module "broken_compiler_spec.hpp" { header "boost/type_traits/broken_compiler_spec.hpp" export * }
  module "common_type.hpp" { header "boost/type_traits/common_type.hpp" export * }
  module "composite_traits.hpp" { header "boost/type_traits/composite_traits.hpp" export * }
  module "conditional.hpp" { header "boost/type_traits/conditional.hpp" export * }
  module "config.hpp" { header "boost/type_traits/config.hpp" export * }
  module "conversion_traits.hpp" { header "boost/type_traits/conversion_traits.hpp" export * }
  module "copy_cv.hpp" { header "boost/type_traits/copy_cv.hpp" export * }
  module "cv_traits.hpp" { header "boost/type_traits/cv_traits.hpp" export * }
  module "decay.hpp" { header "boost/type_traits/decay.hpp" export * }
  module "declval.hpp" { header "boost/type_traits/declval.hpp" export * }
  module "extent.hpp" { header "boost/type_traits/extent.hpp" export * }
  module "floating_point_promotion.hpp" { header "boost/type_traits/floating_point_promotion.hpp" export * }
  module "function_traits.hpp" { header "boost/type_traits/function_traits.hpp" export * }
  module "has_bit_and_assign.hpp" { header "boost/type_traits/has_bit_and_assign.hpp" export * }
  module "has_bit_and.hpp" { header "boost/type_traits/has_bit_and.hpp" export * }
  module "has_bit_or_assign.hpp" { header "boost/type_traits/has_bit_or_assign.hpp" export * }
  module "has_bit_or.hpp" { header "boost/type_traits/has_bit_or.hpp" export * }
  module "has_bit_xor_assign.hpp" { header "boost/type_traits/has_bit_xor_assign.hpp" export * }
  module "has_bit_xor.hpp" { header "boost/type_traits/has_bit_xor.hpp" export * }
  module "has_complement.hpp" { header "boost/type_traits/has_complement.hpp" export * }
  module "has_dereference.hpp" { header "boost/type_traits/has_dereference.hpp" export * }
  module "has_divides_assign.hpp" { header "boost/type_traits/has_divides_assign.hpp" export * }
  module "has_divides.hpp" { header "boost/type_traits/has_divides.hpp" export * }
  module "has_equal_to.hpp" { header "boost/type_traits/has_equal_to.hpp" export * }
  module "has_greater_equal.hpp" { header "boost/type_traits/has_greater_equal.hpp" export * }
  module "has_greater.hpp" { header "boost/type_traits/has_greater.hpp" export * }
  module "has_left_shift_assign.hpp" { header "boost/type_traits/has_left_shift_assign.hpp" export * }
  module "has_left_shift.hpp" { header "boost/type_traits/has_left_shift.hpp" export * }
  module "has_less_equal.hpp" { header "boost/type_traits/has_less_equal.hpp" export * }
  module "has_less.hpp" { header "boost/type_traits/has_less.hpp" export * }
  module "has_logical_and.hpp" { header "boost/type_traits/has_logical_and.hpp" export * }
  module "has_logical_not.hpp" { header "boost/type_traits/has_logical_not.hpp" export * }
  module "has_logical_or.hpp" { header "boost/type_traits/has_logical_or.hpp" export * }
  module "has_minus_assign.hpp" { header "boost/type_traits/has_minus_assign.hpp" export * }
  module "has_minus.hpp" { header "boost/type_traits/has_minus.hpp" export * }
  module "has_modulus_assign.hpp" { header "boost/type_traits/has_modulus_assign.hpp" export * }
  module "has_modulus.hpp" { header "boost/type_traits/has_modulus.hpp" export * }
  module "has_multiplies_assign.hpp" { header "boost/type_traits/has_multiplies_assign.hpp" export * }
  module "has_multiplies.hpp" { header "boost/type_traits/has_multiplies.hpp" export * }
  module "has_negate.hpp" { header "boost/type_traits/has_negate.hpp" export * }
  module "has_new_operator.hpp" { header "boost/type_traits/has_new_operator.hpp" export * }
  module "has_not_equal_to.hpp" { header "boost/type_traits/has_not_equal_to.hpp" export * }
  module "has_nothrow_assign.hpp" { header "boost/type_traits/has_nothrow_assign.hpp" export * }
  module "has_nothrow_constructor.hpp" { header "boost/type_traits/has_nothrow_constructor.hpp" export * }
  module "has_nothrow_copy.hpp" { header "boost/type_traits/has_nothrow_copy.hpp" export * }
  module "has_nothrow_destructor.hpp" { header "boost/type_traits/has_nothrow_destructor.hpp" export * }
  module "has_operator.hpp" { header "boost/type_traits/has_operator.hpp" export * }
  module "has_plus_assign.hpp" { header "boost/type_traits/has_plus_assign.hpp" export * }
  module "has_plus.hpp" { header "boost/type_traits/has_plus.hpp" export * }
  module "has_post_decrement.hpp" { header "boost/type_traits/has_post_decrement.hpp" export * }
  module "has_post_increment.hpp" { header "boost/type_traits/has_post_increment.hpp" export * }
  module "has_pre_decrement.hpp" { header "boost/type_traits/has_pre_decrement.hpp" export * }
  module "has_pre_increment.hpp" { header "boost/type_traits/has_pre_increment.hpp" export * }
  module "has_right_shift_assign.hpp" { header "boost/type_traits/has_right_shift_assign.hpp" export * }
  module "has_right_shift.hpp" { header "boost/type_traits/has_right_shift.hpp" export * }
  module "has_trivial_assign.hpp" { header "boost/type_traits/has_trivial_assign.hpp" export * }
  module "has_trivial_constructor.hpp" { header "boost/type_traits/has_trivial_constructor.hpp" export * }
  module "has_trivial_copy.hpp" { header "boost/type_traits/has_trivial_copy.hpp" export * }
  module "has_trivial_destructor.hpp" { header "boost/type_traits/has_trivial_destructor.hpp" export * }
  module "has_trivial_move_assign.hpp" { header "boost/type_traits/has_trivial_move_assign.hpp" export * }
  module "has_trivial_move_constructor.hpp" { header "boost/type_traits/has_trivial_move_constructor.hpp" export * }
  module "has_unary_minus.hpp" { header "boost/type_traits/has_unary_minus.hpp" export * }
  module "has_unary_plus.hpp" { header "boost/type_traits/has_unary_plus.hpp" export * }
  module "has_virtual_destructor.hpp" { header "boost/type_traits/has_virtual_destructor.hpp" export * }
  module "ice.hpp" { header "boost/type_traits/ice.hpp" export * }
  module "integral_constant.hpp" { header "boost/type_traits/integral_constant.hpp" export * }
  module "integral_promotion.hpp" { header "boost/type_traits/integral_promotion.hpp" export * }
  module "intrinsics.hpp" { header "boost/type_traits/intrinsics.hpp" export * }
  module "is_abstract.hpp" { header "boost/type_traits/is_abstract.hpp" export * }
  module "is_arithmetic.hpp" { header "boost/type_traits/is_arithmetic.hpp" export * }
  module "is_array.hpp" { header "boost/type_traits/is_array.hpp" export * }
  module "is_assignable.hpp" { header "boost/type_traits/is_assignable.hpp" export * }
  module "is_base_and_derived.hpp" { header "boost/type_traits/is_base_and_derived.hpp" export * }
  module "is_base_of.hpp" { header "boost/type_traits/is_base_of.hpp" export * }
  module "is_base_of_tr1.hpp" { header "boost/type_traits/is_base_of_tr1.hpp" export * }
  module "is_class.hpp" { header "boost/type_traits/is_class.hpp" export * }
  module "is_complex.hpp" { header "boost/type_traits/is_complex.hpp" export * }
  module "is_compound.hpp" { header "boost/type_traits/is_compound.hpp" export * }
  module "is_const.hpp" { header "boost/type_traits/is_const.hpp" export * }
  module "is_constructible.hpp" { header "boost/type_traits/is_constructible.hpp" export * }
  module "is_convertible.hpp" { header "boost/type_traits/is_convertible.hpp" export * }
  module "is_copy_assignable.hpp" { header "boost/type_traits/is_copy_assignable.hpp" export * }
  module "is_copy_constructible.hpp" { header "boost/type_traits/is_copy_constructible.hpp" export * }
  module "is_default_constructible.hpp" { header "boost/type_traits/is_default_constructible.hpp" export * }
  module "is_destructible.hpp" { header "boost/type_traits/is_destructible.hpp" export * }
  module "is_empty.hpp" { header "boost/type_traits/is_empty.hpp" export * }
  module "is_enum.hpp" { header "boost/type_traits/is_enum.hpp" export * }
  module "is_final.hpp" { header "boost/type_traits/is_final.hpp" export * }
  module "is_float.hpp" { header "boost/type_traits/is_float.hpp" export * }
  module "is_floating_point.hpp" { header "boost/type_traits/is_floating_point.hpp" export * }
  module "is_function.hpp" { header "boost/type_traits/is_function.hpp" export * }
  module "is_fundamental.hpp" { header "boost/type_traits/is_fundamental.hpp" export * }
  module "is_integral.hpp" { header "boost/type_traits/is_integral.hpp" export * }
  module "is_lvalue_reference.hpp" { header "boost/type_traits/is_lvalue_reference.hpp" export * }
  module "is_member_function_pointer.hpp" { header "boost/type_traits/is_member_function_pointer.hpp" export * }
  module "is_member_object_pointer.hpp" { header "boost/type_traits/is_member_object_pointer.hpp" export * }
  module "is_member_pointer.hpp" { header "boost/type_traits/is_member_pointer.hpp" export * }
  module "is_nothrow_move_assignable.hpp" { header "boost/type_traits/is_nothrow_move_assignable.hpp" export * }
  module "is_nothrow_move_constructible.hpp" { header "boost/type_traits/is_nothrow_move_constructible.hpp" export * }
  module "is_object.hpp" { header "boost/type_traits/is_object.hpp" export * }
  module "is_pod.hpp" { header "boost/type_traits/is_pod.hpp" export * }
  module "is_pointer.hpp" { header "boost/type_traits/is_pointer.hpp" export * }
  module "is_polymorphic.hpp" { header "boost/type_traits/is_polymorphic.hpp" export * }
  module "is_reference.hpp" { header "boost/type_traits/is_reference.hpp" export * }
  module "is_rvalue_reference.hpp" { header "boost/type_traits/is_rvalue_reference.hpp" export * }
  module "is_same.hpp" { header "boost/type_traits/is_same.hpp" export * }
  module "is_scalar.hpp" { header "boost/type_traits/is_scalar.hpp" export * }
  module "is_signed.hpp" { header "boost/type_traits/is_signed.hpp" export * }
  module "is_stateless.hpp" { header "boost/type_traits/is_stateless.hpp" export * }
  module "is_union.hpp" { header "boost/type_traits/is_union.hpp" export * }
  module "is_unsigned.hpp" { header "boost/type_traits/is_unsigned.hpp" export * }
  module "is_virtual_base_of.hpp" { header "boost/type_traits/is_virtual_base_of.hpp" export * }
  module "is_void.hpp" { header "boost/type_traits/is_void.hpp" export * }
  module "is_volatile.hpp" { header "boost/type_traits/is_volatile.hpp" export * }
  module "make_signed.hpp" { header "boost/type_traits/make_signed.hpp" export * }
  module "make_unsigned.hpp" { header "boost/type_traits/make_unsigned.hpp" export * }
  module "object_traits.hpp" { header "boost/type_traits/object_traits.hpp" export * }
  module "promote.hpp" { header "boost/type_traits/promote.hpp" export * }
  module "rank.hpp" { header "boost/type_traits/rank.hpp" export * }
  module "reference_traits.hpp" { header "boost/type_traits/reference_traits.hpp" export * }
  module "remove_all_extents.hpp" { header "boost/type_traits/remove_all_extents.hpp" export * }
  module "remove_bounds.hpp" { header "boost/type_traits/remove_bounds.hpp" export * }
  module "remove_const.hpp" { header "boost/type_traits/remove_const.hpp" export * }
  module "remove_cv.hpp" { header "boost/type_traits/remove_cv.hpp" export * }
  module "remove_extent.hpp" { header "boost/type_traits/remove_extent.hpp" export * }
  // Doesn't work, can't find BOOST_WORKAROUND...
  //module "remove_pointer.hpp" { header "boost/type_traits/remove_pointer.hpp" export * }
  module "remove_reference.hpp" { header "boost/type_traits/remove_reference.hpp" export * }
  module "remove_volatile.hpp" { header "boost/type_traits/remove_volatile.hpp" export * }
  module "same_traits.hpp" { header "boost/type_traits/same_traits.hpp" export * }
  module "transform_traits.hpp" { header "boost/type_traits/transform_traits.hpp" export * }
  module "type_identity.hpp" { header "boost/type_traits/type_identity.hpp" export * }
  module "type_with_alignment.hpp" { header "boost/type_traits/type_with_alignment.hpp" export * }
}
